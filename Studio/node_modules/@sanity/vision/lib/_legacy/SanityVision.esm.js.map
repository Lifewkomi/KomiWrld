{"version":3,"file":"SanityVision.esm.js","sources":["../../src/apiVersions.ts","../../src/components/DelayedSpinner.tsx","../../src/codemirror/extensions.ts","../../src/codemirror/useCodemirrorTheme.ts","../../src/codemirror/VisionCodeMirror.styled.tsx","../../src/codemirror/VisionCodeMirror.tsx","../../src/perspectives.ts","../../src/util/encodeQueryString.ts","../../src/util/getBlobUrl.ts","../../src/util/isPlainObject.ts","../../src/util/localStorage.ts","../../src/util/parseApiQueryString.ts","../../src/util/prefixApiVersion.ts","../../src/util/resizeObserver.ts","../../src/util/tryParseParams.ts","../../src/util/validateApiVersion.ts","../../src/components/ParamsEditor.tsx","../../src/components/PerspectivePopover.styled.tsx","../../src/components/PerspectivePopover.tsx","../../src/components/QueryErrorDialog.styled.tsx","../../src/components/QueryErrorDetails.tsx","../../src/components/QueryErrorDialog.tsx","../../src/components/ResultView.styled.tsx","../../src/components/ResultView.tsx","../../src/components/SaveResultButtons.tsx","../../src/components/VisionGui.styled.tsx","../../src/components/VisionGui.tsx","../../src/hooks/useDatasets.ts","../../src/containers/VisionContainer.tsx","../../src/containers/VisionErrorBoundary.tsx","../../src/SanityVision.tsx"],"sourcesContent":["export const API_VERSIONS = ['v1', 'vX', 'v2021-03-25', 'v2021-10-21', 'v2022-03-07']\nexport const [DEFAULT_API_VERSION] = API_VERSIONS.slice(-1)\n","import {Spinner} from '@sanity/ui'\nimport {useEffect, useState} from 'react'\n\ninterface DelayedSpinnerProps {\n  delay?: number\n}\n\n// Waits for X ms before showing a spinner\nexport function DelayedSpinner(props: DelayedSpinnerProps) {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(true), props.delay || 500)\n    return () => clearTimeout(timer)\n  }, [props.delay])\n\n  return show ? <Spinner muted size={4} /> : null\n}\n","import {closeBrackets} from '@codemirror/autocomplete'\nimport {defaultKeymap, history, historyKeymap} from '@codemirror/commands'\nimport {javascriptLanguage} from '@codemirror/lang-javascript'\nimport {\n  bracketMatching,\n  defaultHighlightStyle,\n  indentOnInput,\n  syntaxHighlighting,\n} from '@codemirror/language'\nimport {highlightSelectionMatches} from '@codemirror/search'\nimport {type Extension} from '@codemirror/state'\nimport {\n  drawSelection,\n  highlightActiveLine,\n  highlightActiveLineGutter,\n  highlightSpecialChars,\n  keymap,\n  lineNumbers,\n} from '@codemirror/view'\n\nexport const codemirrorExtensions: Extension[] = [\n  [javascriptLanguage],\n  lineNumbers(),\n  highlightActiveLine(),\n  highlightActiveLineGutter(),\n  highlightSelectionMatches(),\n  highlightSpecialChars(),\n  indentOnInput(),\n  bracketMatching(),\n  closeBrackets(),\n  history(),\n  drawSelection(),\n  syntaxHighlighting(defaultHighlightStyle, {fallback: true}),\n  keymap.of(\n    [\n      // Override the default keymap for Mod-Enter to not insert a new line, we have a custom event handler for executing queries\n      {key: 'Mod-Enter', run: () => true},\n\n      // Add the default keymap and history keymap\n      defaultKeymap,\n      historyKeymap,\n    ]\n      .flat()\n      .filter(Boolean),\n  ),\n]\n","import {HighlightStyle, syntaxHighlighting} from '@codemirror/language'\nimport {EditorView} from '@codemirror/view'\nimport {tags as t} from '@lezer/highlight'\nimport {hues} from '@sanity/color'\nimport {rem, type Theme} from '@sanity/ui'\nimport {useMemo} from 'react'\n\nexport function useCodemirrorTheme(theme: Theme) {\n  const cmTheme = useMemo(() => createTheme(theme), [theme])\n  const cmHighlight = useMemo(() => syntaxHighlighting(createHighlight(theme)), [theme])\n\n  return [cmTheme, cmHighlight]\n}\n\nfunction createTheme(theme: Theme) {\n  const {color, fonts} = theme.sanity\n  const card = color.card.enabled\n  const cursor = hues.blue[color.dark ? 400 : 500].hex\n  const selection = hues.gray[theme.sanity.color.dark ? 900 : 100].hex\n\n  return EditorView.theme(\n    {\n      '&': {\n        color: card.fg,\n        backgroundColor: card.bg,\n      },\n\n      '.cm-content': {\n        caretColor: cursor,\n      },\n\n      '.cm-editor': {\n        fontFamily: fonts.code.family,\n        fontSize: rem(fonts.code.sizes[1].fontSize),\n        lineHeight: 'inherit',\n      },\n\n      '.cm-cursor, .cm-dropCursor': {borderLeftColor: cursor},\n      '&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection': {\n        backgroundColor: selection,\n      },\n\n      '.cm-panels': {backgroundColor: card.bg, color: card.fg},\n      '.cm-panels.cm-panels-top': {borderBottom: `2px solid ${card.border}`},\n      '.cm-panels.cm-panels-bottom': {borderTop: `2px solid ${card.border}`},\n    },\n    {dark: color.dark},\n  )\n}\n\nfunction createHighlight(theme: Theme) {\n  const c = theme.sanity.color.base\n  const s = theme.sanity.color.syntax\n  return HighlightStyle.define([\n    {tag: t.keyword, color: s.keyword},\n    {tag: [t.propertyName, t.name, t.deleted, t.character, t.macroName], color: s.property},\n    {tag: [t.function(t.variableName), t.labelName], color: s.function},\n    {tag: [t.color, t.constant(t.name), t.standard(t.name)], color: s.variable},\n    {tag: [t.definition(t.name), t.separator], color: s.constant},\n    {\n      tag: [\n        t.typeName,\n        t.className,\n        t.number,\n        t.changed,\n        t.annotation,\n        t.modifier,\n        t.self,\n        t.namespace,\n      ],\n      color: s.number,\n    },\n    {\n      tag: [t.operator, t.operatorKeyword, t.url, t.escape, t.regexp, t.link, t.special(t.string)],\n      color: s.operator,\n    },\n    {tag: [t.meta, t.comment], color: s.comment},\n    {tag: t.strong, fontWeight: 'bold'},\n    {tag: t.emphasis, fontStyle: 'italic'},\n    {tag: t.strikethrough, textDecoration: 'line-through'},\n    {tag: t.heading, fontWeight: 'bold', color: s.property},\n    {tag: [t.atom, t.bool, t.special(t.variableName)], color: s.boolean},\n    {tag: [t.processingInstruction, t.string, t.inserted], color: s.string},\n    {tag: t.invalid, color: c.fg},\n  ])\n}\n","import {rem} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const EditorRoot = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n  overflow: hidden;\n  overflow: clip;\n  position: relative;\n  display: flex;\n\n  & .cm-theme {\n    width: 100%;\n  }\n\n  & .cm-editor {\n    height: 100%;\n\n    font-size: 16px;\n    line-height: 21px;\n  }\n\n  & .cm-line {\n    padding-left: ${({theme}) => rem(theme.sanity.space[3])};\n  }\n\n  & .cm-content {\n    border-right-width: ${({theme}) => rem(theme.sanity.space[4])} !important;\n    padding-top: ${({theme}) => rem(theme.sanity.space[5])};\n  }\n`\n","import {useTheme} from '@sanity/ui'\nimport CodeMirror, {type ReactCodeMirrorProps} from '@uiw/react-codemirror'\n\nimport {codemirrorExtensions} from './extensions'\nimport {useCodemirrorTheme} from './useCodemirrorTheme'\nimport {EditorRoot} from './VisionCodeMirror.styled'\n\nexport function VisionCodeMirror(\n  props: Omit<ReactCodeMirrorProps, 'basicSetup' | 'theme' | 'extensions'>,\n) {\n  const sanityTheme = useTheme()\n  const theme = useCodemirrorTheme(sanityTheme)\n\n  return (\n    <EditorRoot>\n      <CodeMirror basicSetup={false} theme={theme} extensions={codemirrorExtensions} {...props} />\n    </EditorRoot>\n  )\n}\n","import {type ClientPerspective} from '@sanity/client'\n\nexport const PERSPECTIVES = ['raw', 'previewDrafts', 'published'] satisfies ClientPerspective[]\nexport const DEFAULT_PERSPECTIVE = PERSPECTIVES[0]\n\nexport function isPerspective(p: string): p is ClientPerspective {\n  return PERSPECTIVES.includes(p as ClientPerspective)\n}\n","export function encodeQueryString(\n  query: string,\n  params: Record<string, unknown> = {},\n  options: Record<string, string> = {},\n): string {\n  const searchParams = new URLSearchParams()\n  searchParams.set('query', query)\n\n  for (const [key, value] of Object.entries(params)) {\n    searchParams.set(`$${key}`, JSON.stringify(value))\n  }\n\n  for (const [key, value] of Object.entries(options)) {\n    if (value) searchParams.set(key, `${value}`)\n  }\n\n  return `?${searchParams}`\n}\n","import {json2csv} from 'json-2-csv'\n\nfunction getBlobUrl(content: string, mimeType: string): string {\n  return URL.createObjectURL(\n    new Blob([content], {\n      type: mimeType,\n    }),\n  )\n}\n\nfunction getMemoizedBlobUrlResolver(mimeType: string, stringEncoder: (input: any) => string) {\n  return (() => {\n    let prevResult = ''\n    let prevContent = ''\n    return (input: unknown) => {\n      const content = stringEncoder(input)\n      if (typeof content !== 'string' || content === '') {\n        return undefined\n      }\n\n      if (content === prevContent) {\n        return prevResult\n      }\n\n      prevContent = content\n      if (prevResult) {\n        URL.revokeObjectURL(prevResult)\n      }\n\n      prevResult = getBlobUrl(content, mimeType)\n      return prevResult\n    }\n  })()\n}\n\nexport const getJsonBlobUrl = getMemoizedBlobUrlResolver('application/json', (input) =>\n  JSON.stringify(input, null, 2),\n)\n\nexport const getCsvBlobUrl = getMemoizedBlobUrlResolver('text/csv', (input) => {\n  return json2csv(Array.isArray(input) ? input : [input]).trim()\n})\n","export function isPlainObject(obj: unknown): obj is Record<string, unknown> {\n  return (\n    !!obj && typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]'\n  )\n}\n","import {isPlainObject} from './isPlainObject'\n\nconst hasLocalStorage = supportsLocalStorage()\nconst keyPrefix = 'sanityVision:'\n\nexport interface LocalStorageish {\n  get: <T>(key: string, defaultVal: T) => T\n  set: <T>(key: string, value: T) => T\n  merge: <T>(props: T) => T\n}\n\nexport function clearLocalStorage() {\n  if (!hasLocalStorage) {\n    return\n  }\n\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i)\n    if (key?.startsWith(keyPrefix)) {\n      localStorage.removeItem(key)\n    }\n  }\n}\n\nexport function getLocalStorage(namespace: string): LocalStorageish {\n  const storageKey = `${keyPrefix}${namespace}`\n  let loadedState: Record<string, unknown> | null = null\n\n  return {get, set, merge}\n\n  function get<T>(key: string, defaultVal: T): T {\n    const state = ensureState()\n    return typeof state[key] === 'undefined' ? defaultVal : (state[key] as T)\n  }\n\n  function set<T>(key: string, value: T): T {\n    const state = ensureState()\n    state[key] = value\n    localStorage.setItem(storageKey, JSON.stringify(loadedState))\n    return value\n  }\n\n  function merge<T>(props: T): T {\n    const state = {...ensureState(), ...props}\n    localStorage.setItem(storageKey, JSON.stringify(state))\n    return state\n  }\n\n  function ensureState(): Record<string, unknown> {\n    if (loadedState === null) {\n      loadedState = loadState()\n    }\n\n    return loadedState\n  }\n\n  function loadState() {\n    if (!hasLocalStorage) {\n      return {}\n    }\n\n    try {\n      const stored = JSON.parse(localStorage.getItem(storageKey) || '{}')\n      return isPlainObject(stored) ? stored : {}\n    } catch (err) {\n      return {}\n    }\n  }\n}\n\nfunction supportsLocalStorage() {\n  const mod = 'lsCheck'\n  try {\n    localStorage.setItem(mod, mod)\n    localStorage.removeItem(mod)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","export interface ParsedApiQueryString {\n  query: string\n  params: Record<string, unknown>\n  options: Record<string, string>\n}\n\nexport function parseApiQueryString(qs: URLSearchParams): ParsedApiQueryString {\n  const params: Record<string, unknown> = {}\n  const options: Record<string, string> = {}\n\n  for (const [key, value] of qs.entries()) {\n    if (key[0] === '$') {\n      params[key.slice(1)] = JSON.parse(value)\n      continue\n    }\n\n    if (key === 'perspective') {\n      options[key] = value\n      continue\n    }\n  }\n\n  return {query: qs.get('query') || '', params, options}\n}\n","export function prefixApiVersion(version: string): string {\n  if (version[0] !== 'v' && version !== 'other') {\n    return `v${version}`\n  }\n\n  return version\n}\n","import {ResizeObserver as ResizeObserverPolyfill} from '@juggle/resize-observer'\n\nexport const RO = typeof document === 'undefined' ? ResizeObserverPolyfill : window.ResizeObserver\n\nexport {RO as ResizeObserver}\n","import JSON5 from 'json5'\nimport {type TFunction} from 'sanity'\n\nexport function tryParseParams(\n  val: string,\n  t: TFunction<'vision', undefined>,\n): Record<string, unknown> | Error {\n  try {\n    const parsed = val ? JSON5.parse(val) : {}\n    return typeof parsed === 'object' && parsed && !Array.isArray(parsed) ? parsed : {}\n  } catch (err) {\n    // JSON5 always prefixes the error message with JSON5:, so we remove it\n    // to clean up the error tooltip\n    err.message = `${t('params.error.params-invalid-json')}:\\n\\n${err.message.replace(\n      'JSON5:',\n      '',\n    )}`\n    return err\n  }\n}\n","export function validateApiVersion(apiVersion: string): boolean {\n  const parseableApiVersion = apiVersion.replace(/^v/, '').trim().toUpperCase()\n\n  const isValidApiVersion =\n    parseableApiVersion.length > 0 &&\n    (parseableApiVersion === 'X' ||\n      parseableApiVersion === '1' ||\n      (/^\\d{4}-\\d{2}-\\d{2}$/.test(parseableApiVersion) && !isNaN(Date.parse(parseableApiVersion))))\n\n  return isValidApiVersion\n}\n","import {debounce} from 'lodash'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {type TFunction, useTranslation} from 'sanity'\n\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {visionLocaleNamespace} from '../i18n'\nimport {tryParseParams} from '../util/tryParseParams'\n\nconst defaultValue = `{\\n  \\n}`\n\nexport interface ParamsEditorChangeEvent {\n  parsed: Record<string, unknown>\n  raw: string\n  valid: boolean\n  error: string | undefined\n}\n\nexport interface ParamsEditorProps {\n  value: string\n  onChange: (changeEvt: ParamsEditorChangeEvent) => void\n}\n\nexport interface ParamsEditorChange {\n  valid: boolean\n}\n\nexport function ParamsEditor(props: ParamsEditorProps) {\n  const {onChange} = props\n  const {t} = useTranslation(visionLocaleNamespace)\n  const {raw: value, error, parsed, valid} = eventFromValue(props.value, t)\n  const [isValid, setValid] = useState(valid)\n  const [init, setInit] = useState(false)\n\n  // Emit onChange on very first render\n  useEffect(() => {\n    if (!init) {\n      onChange({parsed, raw: value, valid: isValid, error})\n      setInit(true)\n    }\n  }, [error, init, isValid, onChange, parsed, value])\n\n  const handleChangeRaw = useCallback(\n    (newValue: string) => {\n      const event = eventFromValue(newValue, t)\n      setValid(event.valid)\n      onChange(event)\n    },\n    [onChange, t],\n  )\n\n  const handleChange = useMemo(() => debounce(handleChangeRaw, 333), [handleChangeRaw])\n  return <VisionCodeMirror value={props.value || defaultValue} onChange={handleChange} />\n}\n\nfunction eventFromValue(\n  value: string,\n  t: TFunction<typeof visionLocaleNamespace, undefined>,\n): ParamsEditorChangeEvent {\n  const parsedParams = tryParseParams(value, t)\n  const params = parsedParams instanceof Error ? {} : parsedParams\n  const validationError = parsedParams instanceof Error ? parsedParams.message : undefined\n  const isValid = !validationError\n\n  return {\n    parsed: params,\n    raw: value,\n    valid: isValid,\n    error: validationError,\n  }\n}\n","import {Box} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const PerspectivePopoverContent = styled(Box)`\n  /* This limits the width of the popover content */\n  max-width: 240px;\n`\n\nexport const PerspectivePopoverLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n","import {HelpCircleIcon} from '@sanity/icons'\nimport {Badge, Button, Card, Inline, Popover, Stack, Text, useClickOutside} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {PerspectivePopoverContent, PerspectivePopoverLink} from './PerspectivePopover.styled'\n\nexport function PerspectivePopover() {\n  const [open, setOpen] = useState(false)\n  const [buttonEl, setButtonEl] = useState<HTMLElement | null>(null)\n  const [popoverEl, setPopoverEl] = useState<HTMLElement | null>(null)\n\n  const handleClick = useCallback(() => setOpen((o) => !o), [])\n  const handleClickOutside = useCallback(() => setOpen(false), [])\n\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  useClickOutside(handleClickOutside, [buttonEl, popoverEl])\n\n  return (\n    <Popover\n      content={\n        <PerspectivePopoverContent>\n          <Stack space={4}>\n            <Inline space={2}>\n              <Text weight=\"medium\">{t('settings.perspectives.title')}</Text>\n              <Badge tone=\"primary\">{t('label.new')}</Badge>\n            </Inline>\n\n            <Card>\n              <Text muted>{t('settings.perspectives.description')}</Text>\n            </Card>\n\n            <Card>\n              <Text>\n                <PerspectivePopoverLink href=\"https://sanity.io/docs/perspectives\" target=\"_blank\">\n                  {t('settings.perspectives.action.docs-link')} &rarr;\n                </PerspectivePopoverLink>\n              </Text>\n            </Card>\n          </Stack>\n        </PerspectivePopoverContent>\n      }\n      placement=\"bottom-start\"\n      portal\n      padding={3}\n      ref={setPopoverEl}\n      open={open}\n    >\n      <Button\n        icon={HelpCircleIcon}\n        mode=\"bleed\"\n        padding={2}\n        tone=\"primary\"\n        fontSize={1}\n        ref={setButtonEl}\n        onClick={handleClick}\n        selected={open}\n      />\n    </Popover>\n  )\n}\n","import {Code} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const ErrorCode = styled(Code)`\n  color: ${({theme}) => theme.sanity.color.muted.critical.enabled.fg};\n`\n","import {Box} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\ninterface ContentLakeQueryError {\n  details: {\n    query: string\n    start: number\n    end: number\n\n    lineNumber?: number\n    column?: number\n  }\n}\n\nexport function QueryErrorDetails({error}: {error: ContentLakeQueryError | Error}) {\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!('details' in error)) {\n    return null\n  }\n\n  const details = {...error.details, ...mapToLegacyDetails(error.details)}\n  if (!details.line) {\n    return null\n  }\n\n  return (\n    <div>\n      <ErrorCode size={1}>{`${details.line}\\n${dashLine(\n        details.column,\n        details.columnEnd,\n      )}`}</ErrorCode>\n      <Box marginTop={4}>\n        <ErrorCode size={1}>{`${t('query.error.line')}:   ${details.lineNumber}\\n${t(\n          'query.error.column',\n        )}: ${details.column}`}</ErrorCode>\n      </Box>\n    </div>\n  )\n}\n\nfunction mapToLegacyDetails(details: ContentLakeQueryError['details']) {\n  if (!details || typeof details.query !== 'string' || typeof details.start !== 'number') {\n    return {}\n  }\n\n  const {query, start, end} = details\n  const lineStart = query.slice(0, start).lastIndexOf('\\n') + 1\n  const lineNumber = (query.slice(0, lineStart).match(/\\n/g) || []).length\n  const line = query.slice(lineStart, query.indexOf('\\n', lineStart))\n  const column = start - lineStart\n  const columnEnd = typeof end === 'number' ? end - lineStart : undefined\n\n  return {line, lineNumber, column, columnEnd}\n}\n\nfunction dashLine(column: number, columnEnd: number | undefined): string {\n  const line = '-'.repeat(column)\n  const hats = `^`.repeat(columnEnd ? columnEnd - column : 1)\n  return `${line}${hats}`\n}\n","import {Stack} from '@sanity/ui'\n\nimport {QueryErrorDetails} from './QueryErrorDetails'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\nexport function QueryErrorDialog(props: {error: Error}) {\n  return (\n    <Stack space={5} marginTop={2}>\n      <ErrorCode size={1}>{props.error.message}</ErrorCode>\n      <QueryErrorDetails error={props.error} />\n    </Stack>\n  )\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const ResultViewWrapper = styled.div<{theme: Theme}>(({theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[0])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0px - ${rem(space[4])});\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[2])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n      word-break: break-word;\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import JSONInspector from '@rexxars/react-json-inspector'\nimport {Code} from '@sanity/ui'\nimport LRU from 'quick-lru'\n\nimport {ResultViewWrapper} from './ResultView.styled'\n\nconst lru = new LRU({maxSize: 50000})\n\nexport function ResultView(props: {data: unknown}) {\n  const {data} = props\n\n  if (isRecord(data) || Array.isArray(data)) {\n    return (\n      <ResultViewWrapper>\n        <JSONInspector\n          data={data}\n          search={false}\n          isExpanded={isExpanded}\n          onClick={toggleExpanded}\n        />\n      </ResultViewWrapper>\n    )\n  }\n\n  return <Code language=\"json\">{JSON.stringify(data)}</Code>\n}\n\nfunction isExpanded(keyPath: string, value: unknown): boolean {\n  const depthLimit = 4\n  const cached = lru.get(keyPath) as boolean | undefined\n\n  if (typeof cached === 'boolean') {\n    return cached\n  }\n\n  const segments = keyPath.split('.', depthLimit)\n  if (segments.length === depthLimit) {\n    return false\n  }\n\n  if (Array.isArray(value)) {\n    return true\n  }\n\n  return isRecord(value) && !segments.some((key) => isArrayKeyOverLimit(key))\n}\n\nfunction toggleExpanded(event: {path: string}): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst numeric = /^\\d+$/\nfunction isArrayKeyOverLimit(segment: string, limit = 10) {\n  return numeric.test(segment) && parseInt(segment, 10) > limit\n}\n","import {DocumentSheetIcon} from '@sanity/icons'\nimport {Button, Tooltip} from '@sanity/ui'\nimport {type MouseEvent} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\n\ninterface SaveButtonProps {\n  blobUrl: string | undefined\n}\n\nfunction preventSave(evt: MouseEvent<HTMLButtonElement>) {\n  return evt.preventDefault()\n}\n\nexport function SaveCsvButton({blobUrl}: SaveButtonProps) {\n  const {t} = useTranslation(visionLocaleNamespace)\n  const isDisabled = !blobUrl\n\n  const button = (\n    <Button\n      as=\"a\"\n      disabled={isDisabled}\n      download={isDisabled ? undefined : 'query-result.csv'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      onClick={isDisabled ? preventSave : undefined}\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"CSV\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n\n  return isDisabled ? (\n    <Tooltip content={t('result.save-result-as-csv.not-csv-encodable')} placement=\"top\">\n      {button}\n    </Tooltip>\n  ) : (\n    button\n  )\n}\n\nexport function SaveJsonButton({blobUrl}: SaveButtonProps) {\n  return (\n    <Button\n      as=\"a\"\n      download={'query-result.json'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"JSON\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n}\n","import {Box, Card, Flex, Label, rem, Text} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const Root = styled(Flex)`\n  .sidebarPanes .Pane {\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  & .Resizer {\n    background: var(--card-border-color);\n    opacity: 1;\n    z-index: 1;\n    box-sizing: border-box;\n    background-clip: padding-box;\n    border: solid transparent;\n  }\n\n  & .Resizer:hover {\n    border-color: var(--card-shadow-ambient-color);\n  }\n\n  & .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-width: 5px 0;\n    cursor: row-resize;\n    width: 100%;\n    z-index: 4;\n  }\n\n  & .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-width: 0 5px;\n    cursor: col-resize;\n    z-index: 2; /* To prevent the resizer from being hidden behind CodeMirror scroll area */\n  }\n\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }\n`\n\nRoot.displayName = 'Root'\n\nexport const Header = styled(Card)`\n  border-bottom: 1px solid var(--card-border-color);\n`\n\nexport const StyledLabel = styled(Label)`\n  flex: 1;\n`\n\nexport const SplitpaneContainer = styled(Box)`\n  position: relative;\n`\n\nexport const QueryCopyLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n\nexport const InputBackgroundContainer = styled(Box)`\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  padding: 0;\n  margin: 0;\n  z-index: 10;\n  right: 0;\n\n  ${StyledLabel} {\n    user-select: none;\n  }\n`\n\nexport const InputBackgroundContainerLeft = styled(InputBackgroundContainer)`\n  // This is so its aligned with the gutters of CodeMirror\n  left: 33px;\n`\n\nexport const InputContainer = styled(Card)`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  flex-direction: column;\n`\n\nexport const ResultOuterContainer = styled(Flex)`\n  height: 100%;\n`\n\nexport const ResultInnerContainer = styled(Box)`\n  position: relative;\n`\n\nexport const ResultContainer = styled(Card)<{$isInvalid: boolean}>`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  max-width: 100%;\n\n  ${({$isInvalid}) =>\n    $isInvalid &&\n    css`\n      &:after {\n        background-color: var(--card-bg-color);\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n    `}\n`\n\nexport const Result = styled(Box)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 20;\n`\n\nexport const ResultFooter = styled(Flex)`\n  border-top: 1px solid var(--card-border-color);\n`\n\nexport const TimingsCard = styled(Card)`\n  position: relative;\n`\n\nexport const TimingsContainer = styled(Box)`\n  width: 100%;\n  height: 100%;\n`\n\nexport const TimingsTextContainer = styled(Flex)`\n  height: 100%;\n  min-height: ${({theme}) =>\n    rem(\n      theme.sanity.space[3] * 2 +\n        theme.sanity.fonts.text.sizes[2].lineHeight -\n        theme.sanity.fonts.text.sizes[2].ascenderHeight -\n        theme.sanity.fonts.text.sizes[2].descenderHeight,\n    )};\n`\n\nexport const DownloadsCard = styled(Card)`\n  position: relative;\n`\n\nexport const SaveResultLabel = styled(Text)`\n  transform: initial;\n  &:before,\n  &:after {\n    content: none;\n  }\n  > span {\n    display: flex !important;\n    gap: ${({theme}) => rem(theme.sanity.space[3])};\n    align-items: center;\n  }\n`\n\nexport const ControlsContainer = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n","/* eslint-disable complexity */\nimport SplitPane from '@rexxars/react-split-pane'\nimport {\n  type ClientPerspective,\n  type ListenEvent,\n  type MutationEvent,\n  type SanityClient,\n} from '@sanity/client'\nimport {CopyIcon, ErrorOutlineIcon, PlayIcon, StopIcon} from '@sanity/icons'\nimport {\n  Box,\n  Button,\n  Card,\n  Flex,\n  Grid,\n  Hotkeys,\n  Inline,\n  Select,\n  Stack,\n  Text,\n  TextInput,\n  type ToastContextValue,\n  Tooltip,\n} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {type ChangeEvent, createRef, PureComponent, type RefObject} from 'react'\nimport {type TFunction, Translate} from 'sanity'\n\nimport {API_VERSIONS, DEFAULT_API_VERSION} from '../apiVersions'\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {DEFAULT_PERSPECTIVE, isPerspective, PERSPECTIVES} from '../perspectives'\nimport {type VisionProps} from '../types'\nimport {encodeQueryString} from '../util/encodeQueryString'\nimport {getCsvBlobUrl, getJsonBlobUrl} from '../util/getBlobUrl'\nimport {getLocalStorage, type LocalStorageish} from '../util/localStorage'\nimport {parseApiQueryString, type ParsedApiQueryString} from '../util/parseApiQueryString'\nimport {prefixApiVersion} from '../util/prefixApiVersion'\nimport {ResizeObserver} from '../util/resizeObserver'\nimport {tryParseParams} from '../util/tryParseParams'\nimport {validateApiVersion} from '../util/validateApiVersion'\nimport {DelayedSpinner} from './DelayedSpinner'\nimport {ParamsEditor, type ParamsEditorChangeEvent} from './ParamsEditor'\nimport {PerspectivePopover} from './PerspectivePopover'\nimport {QueryErrorDialog} from './QueryErrorDialog'\nimport {ResultView} from './ResultView'\nimport {SaveCsvButton, SaveJsonButton} from './SaveResultButtons'\nimport {\n  ControlsContainer,\n  DownloadsCard,\n  Header,\n  InputBackgroundContainer,\n  InputBackgroundContainerLeft,\n  InputContainer,\n  QueryCopyLink,\n  Result,\n  ResultContainer,\n  ResultFooter,\n  ResultInnerContainer,\n  ResultOuterContainer,\n  Root,\n  SaveResultLabel,\n  SplitpaneContainer,\n  StyledLabel,\n  TimingsCard,\n  TimingsTextContainer,\n} from './VisionGui.styled'\n\nfunction nodeContains(node: Node, other: EventTarget | Node | null): boolean {\n  if (!node || !other) {\n    return false\n  }\n\n  // eslint-disable-next-line no-bitwise\n  return node === other || !!(node.compareDocumentPosition(other as Node) & 16)\n}\n\nconst sanityUrl =\n  /\\.(?:api|apicdn)\\.sanity\\.io\\/(vX|v1|v\\d{4}-\\d\\d-\\d\\d)\\/.*?(?:query|listen)\\/(.*?)\\?(.*)/\nconst isRunHotkey = (event: KeyboardEvent) =>\n  isHotkey('ctrl+enter', event) || isHotkey('mod+enter', event)\n\ninterface PaneSizeOptions {\n  defaultSize: number\n  size?: number\n  allowResize: boolean\n  minSize: number\n  maxSize: number\n}\n\nfunction narrowBreakpoint(): boolean {\n  return typeof window !== 'undefined' && window.innerWidth > 600\n}\n\nfunction calculatePaneSizeOptions(rootHeight: number): PaneSizeOptions {\n  return {\n    defaultSize: rootHeight / (narrowBreakpoint() ? 2 : 1),\n    size: rootHeight > 550 ? undefined : rootHeight * 0.4,\n    allowResize: rootHeight > 550,\n    minSize: Math.min(170, Math.max(170, rootHeight / 2)),\n    maxSize: rootHeight > 650 ? rootHeight * 0.7 : rootHeight * 0.6,\n  }\n}\n\ninterface Subscription {\n  unsubscribe: () => void\n}\n\ninterface VisionGuiProps extends VisionProps {\n  toast: ToastContextValue\n  datasets: string[]\n  t: TFunction<'vision', undefined>\n}\n\ninterface VisionGuiState {\n  // Selected options\n  dataset: string\n  apiVersion: string\n  customApiVersion: string | false\n  perspective: ClientPerspective\n\n  // Selected options validation state\n  isValidApiVersion: boolean\n\n  // URL used to execute query/listener\n  url?: string | undefined\n\n  // Inputs\n  query: string\n  rawParams: string\n\n  // Parsed input\n  params: Record<string, unknown> | Error | undefined\n  paramsError?: string | undefined\n  hasValidParams: boolean\n\n  // Query/listen result\n  queryResult?: unknown | undefined\n  listenMutations: MutationEvent[]\n  error?: Error | undefined\n\n  // Operation timings\n  queryTime?: number | undefined\n  e2eTime?: number | undefined\n\n  // Operation state, used to trigger re-renders (spinners etc)\n  queryInProgress: boolean\n  listenInProgress: boolean\n\n  // UI drawing state\n  paneSizeOptions: PaneSizeOptions\n}\n\nexport class VisionGui extends PureComponent<VisionGuiProps, VisionGuiState> {\n  _visionRoot: RefObject<HTMLDivElement>\n  _queryEditorContainer: RefObject<HTMLDivElement>\n  _paramsEditorContainer: RefObject<HTMLDivElement>\n  _operationUrlElement: RefObject<HTMLInputElement>\n  _customApiVersionElement: RefObject<HTMLInputElement>\n  _resizeListener: ResizeObserver | undefined\n  _querySubscription: Subscription | undefined\n  _listenSubscription: Subscription | undefined\n  _client: SanityClient\n  _localStorage: LocalStorageish\n\n  constructor(props: VisionGuiProps) {\n    super(props)\n\n    const {client, datasets, config} = props\n    this._localStorage = getLocalStorage(client.config().projectId || 'default')\n\n    const defaultDataset = config.defaultDataset || client.config().dataset || datasets[0]\n    const defaultApiVersion = prefixApiVersion(`${config.defaultApiVersion}`)\n    const defaultPerspective = DEFAULT_PERSPECTIVE\n\n    let dataset = this._localStorage.get('dataset', defaultDataset)\n    let apiVersion = this._localStorage.get('apiVersion', defaultApiVersion)\n    let lastQuery = this._localStorage.get('query', '')\n    let lastParams = this._localStorage.get('params', '{\\n  \\n}')\n    const customApiVersion = API_VERSIONS.includes(apiVersion) ? false : apiVersion\n    let perspective = this._localStorage.get('perspective', defaultPerspective)\n\n    if (!datasets.includes(dataset)) {\n      dataset = datasets.includes(defaultDataset) ? defaultDataset : datasets[0]\n    }\n\n    if (!API_VERSIONS.includes(apiVersion)) {\n      apiVersion = DEFAULT_API_VERSION\n    }\n\n    if (!PERSPECTIVES.includes(perspective)) {\n      perspective = DEFAULT_PERSPECTIVE\n    }\n\n    if (typeof lastQuery !== 'string') {\n      lastQuery = ''\n    }\n\n    if (typeof lastParams !== 'string') {\n      lastParams = '{\\n  \\n}'\n    }\n\n    this._visionRoot = createRef()\n    this._operationUrlElement = createRef()\n    this._queryEditorContainer = createRef()\n    this._paramsEditorContainer = createRef()\n    this._customApiVersionElement = createRef()\n\n    this._client = props.client.withConfig({\n      apiVersion: customApiVersion || apiVersion,\n      dataset,\n      perspective: perspective,\n      allowReconfigure: true,\n    })\n\n    // Initial root height without header\n    const bodyHeight =\n      typeof window !== 'undefined' && typeof document !== 'undefined'\n        ? document.body.getBoundingClientRect().height - 60\n        : 0\n\n    const params = lastParams ? tryParseParams(lastParams, this.props.t) : undefined\n\n    this.state = {\n      // Selected options\n      dataset,\n      apiVersion,\n      customApiVersion,\n      perspective,\n\n      // Selected options validation state\n      isValidApiVersion: customApiVersion ? validateApiVersion(customApiVersion) : false,\n\n      // Inputs\n      query: lastQuery,\n      rawParams: lastParams,\n\n      // Parsed input\n      params,\n      hasValidParams: !(params instanceof Error),\n\n      // Query/listen results\n      listenMutations: [],\n\n      // Operation state\n      queryInProgress: false,\n      listenInProgress: false,\n\n      // UI drawing state\n      paneSizeOptions: calculatePaneSizeOptions(bodyHeight),\n    }\n\n    this.handleChangeDataset = this.handleChangeDataset.bind(this)\n    this.handleChangeApiVersion = this.handleChangeApiVersion.bind(this)\n    this.handleCustomApiVersionChange = this.handleCustomApiVersionChange.bind(this)\n    this.handleChangePerspective = this.handleChangePerspective.bind(this)\n    this.handleListenExecution = this.handleListenExecution.bind(this)\n    this.handleListenerEvent = this.handleListenerEvent.bind(this)\n    this.handleQueryExecution = this.handleQueryExecution.bind(this)\n    this.handleQueryChange = this.handleQueryChange.bind(this)\n    this.handleParamsChange = this.handleParamsChange.bind(this)\n    this.handleCopyUrl = this.handleCopyUrl.bind(this)\n    this.handlePaste = this.handlePaste.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  componentDidMount() {\n    window.document.addEventListener('paste', this.handlePaste)\n    window.document.addEventListener('keydown', this.handleKeyDown)\n\n    this.handleResizeListen()\n  }\n\n  componentWillUnmount() {\n    this.cancelQuery()\n    this.cancelListener()\n    this.cancelEventListener()\n    this.cancelResizeListener()\n  }\n\n  handleResizeListen() {\n    if (!this._visionRoot.current) {\n      return\n    }\n\n    this._resizeListener = new ResizeObserver(this.handleResize)\n    this._resizeListener.observe(this._visionRoot.current)\n  }\n\n  handleResize(entries: ResizeObserverEntry[]) {\n    const entry = entries?.[0]\n\n    this.setState((prevState) => ({\n      ...prevState,\n      paneSizeOptions: calculatePaneSizeOptions(entry.contentRect.height),\n    }))\n  }\n\n  cancelResizeListener() {\n    if (this._resizeListener) {\n      this._resizeListener.disconnect()\n    }\n  }\n\n  handlePaste(evt: ClipboardEvent) {\n    if (!evt.clipboardData) {\n      return\n    }\n\n    const data = evt.clipboardData.getData('text/plain')\n    const match = data.match(sanityUrl)\n    if (!match) {\n      return\n    }\n\n    const [, usedApiVersion, usedDataset, urlQuery] = match\n    let parts: ParsedApiQueryString\n\n    try {\n      const qs = new URLSearchParams(urlQuery)\n      parts = parseApiQueryString(qs)\n    } catch (err) {\n      console.warn('Error while trying to parse API URL: ', err.message) // eslint-disable-line no-console\n      return // Give up on error\n    }\n\n    let apiVersion: string | undefined\n    let customApiVersion: string | false | undefined\n\n    if (validateApiVersion(usedApiVersion)) {\n      if (API_VERSIONS.includes(usedApiVersion)) {\n        apiVersion = usedApiVersion\n        customApiVersion = false\n      } else {\n        customApiVersion = usedApiVersion\n      }\n    }\n\n    const perspective = PERSPECTIVES.includes(parts.options.perspective as ClientPerspective)\n      ? (parts.options.perspective as ClientPerspective)\n      : undefined\n\n    evt.preventDefault()\n    this.setState(\n      (prevState) => ({\n        dataset: this.props.datasets.includes(usedDataset) ? usedDataset : prevState.dataset,\n        query: parts.query,\n        params: parts.params,\n        rawParams: JSON.stringify(parts.params, null, 2),\n        apiVersion: typeof apiVersion === 'undefined' ? prevState.apiVersion : apiVersion,\n        customApiVersion:\n          typeof customApiVersion === 'undefined' ? prevState.customApiVersion : customApiVersion,\n        perspective: typeof perspective === 'undefined' ? prevState.perspective : perspective,\n      }),\n      () => {\n        this._localStorage.merge({\n          query: this.state.query,\n          params: this.state.rawParams,\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this._client.config({\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this.handleQueryExecution()\n        this.props.toast.push({\n          closable: true,\n          id: 'vision-paste',\n          status: 'info',\n          title: 'Parsed URL to query',\n        })\n      },\n    )\n  }\n\n  cancelQuery() {\n    if (!this._querySubscription) {\n      return\n    }\n\n    this._querySubscription.unsubscribe()\n    this._querySubscription = undefined\n  }\n\n  cancelListener() {\n    if (!this._listenSubscription) {\n      return\n    }\n\n    this._listenSubscription.unsubscribe()\n    this._listenSubscription = undefined\n  }\n\n  cancelEventListener() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleChangeDataset(evt: ChangeEvent<HTMLSelectElement>) {\n    const dataset = evt.target.value\n    this._localStorage.set('dataset', dataset)\n    this.setState({dataset})\n    this._client.config({dataset})\n    this.handleQueryExecution()\n  }\n\n  handleChangeApiVersion(evt: ChangeEvent<HTMLSelectElement>) {\n    const apiVersion = evt.target.value\n    if (apiVersion?.toLowerCase() === 'other') {\n      this.setState({customApiVersion: 'v'}, () => {\n        this._customApiVersionElement.current?.focus()\n      })\n      return\n    }\n\n    this.setState({apiVersion, customApiVersion: false}, () => {\n      this._localStorage.set('apiVersion', this.state.apiVersion)\n      this._client.config({\n        apiVersion: this.state.apiVersion,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleCustomApiVersionChange(evt: ChangeEvent<HTMLInputElement>) {\n    const customApiVersion = evt.target.value || ''\n    const isValidApiVersion = validateApiVersion(customApiVersion)\n\n    this.setState(\n      (prevState) => ({\n        apiVersion: isValidApiVersion ? customApiVersion : prevState.apiVersion,\n        customApiVersion: customApiVersion || 'v',\n        isValidApiVersion,\n      }),\n      () => {\n        if (!this.state.isValidApiVersion || typeof this.state.customApiVersion !== 'string') {\n          return\n        }\n\n        this._localStorage.set('apiVersion', this.state.customApiVersion)\n        this._client.config({apiVersion: this.state.customApiVersion})\n      },\n    )\n  }\n\n  handleChangePerspective(evt: ChangeEvent<HTMLSelectElement>) {\n    const perspective = evt.target.value\n    if (!isPerspective(perspective)) {\n      return\n    }\n\n    this.setState({perspective}, () => {\n      this._localStorage.set('perspective', this.state.perspective)\n      this._client.config({\n        perspective: this.state.perspective,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleListenerEvent(evt: ListenEvent<any>) {\n    if (evt.type !== 'mutation') {\n      this.props.toast.push({\n        closable: true,\n        id: 'vision-listen',\n        status: 'success',\n        title: 'Listening for mutations…',\n      })\n      return\n    }\n\n    this.setState(({listenMutations}) => ({\n      listenMutations:\n        listenMutations.length === 50\n          ? [evt, ...listenMutations.slice(0, 49)]\n          : [evt, ...listenMutations],\n    }))\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const {hasValidParams} = this.state\n    const isWithinRoot =\n      this._visionRoot.current && nodeContains(this._visionRoot.current, event.target)\n    if (isRunHotkey(event) && isWithinRoot && hasValidParams) {\n      this.handleQueryExecution()\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n\n  ensureSelectedApiVersion() {\n    const {apiVersion, customApiVersion} = this.state\n    const wantedApiVersion = customApiVersion || apiVersion\n    if (this._client.config().apiVersion !== wantedApiVersion) {\n      this._client.config({apiVersion: wantedApiVersion})\n    }\n  }\n\n  handleListenExecution() {\n    const {query, params, rawParams, listenInProgress} = this.state\n    if (listenInProgress) {\n      this.cancelListener()\n      this.setState({listenInProgress: false})\n      return\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const paramsError = params instanceof Error ? params : undefined\n    const encodeParams = params instanceof Error ? {} : params || {}\n    const url = this._client.getDataUrl('listen', encodeQueryString(query, encodeParams, {}))\n\n    const shouldExecute = !paramsError && query.trim().length > 0\n\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelQuery()\n\n    this.setState({\n      url,\n      listenMutations: [],\n      queryInProgress: false,\n      queryResult: undefined,\n      listenInProgress: shouldExecute,\n      error: paramsError,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!shouldExecute) {\n      return\n    }\n\n    this._listenSubscription = this._client\n      .listen(query, params, {events: ['mutation', 'welcome']})\n      .subscribe({\n        next: this.handleListenerEvent,\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            listenInProgress: false,\n          }),\n      })\n  }\n\n  handleQueryExecution() {\n    const {query, params, rawParams, queryInProgress} = this.state\n\n    if (queryInProgress) {\n      this.cancelQuery()\n      this.cancelListener()\n      this.setState({queryInProgress: false})\n      return true\n    }\n\n    const paramsError = params instanceof Error && params\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelListener()\n\n    this.setState({\n      queryInProgress: !paramsError && Boolean(query),\n      listenInProgress: false,\n      listenMutations: [],\n      error: paramsError || undefined,\n      queryResult: undefined,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!query || paramsError) {\n      return true\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const urlQueryOpts: Record<string, string> = {}\n    if (this.state.perspective !== 'raw') {\n      urlQueryOpts.perspective = this.state.perspective\n    }\n\n    const url = this._client.getUrl(\n      this._client.getDataUrl('query', encodeQueryString(query, params, urlQueryOpts)),\n    )\n    this.setState({url})\n\n    const queryStart = Date.now()\n\n    this._querySubscription = this._client.observable\n      .fetch(query, params, {filterResponse: false, tag: 'vision'})\n      .subscribe({\n        next: (res) =>\n          this.setState({\n            queryTime: res.ms,\n            e2eTime: Date.now() - queryStart,\n            queryResult: res.result,\n            queryInProgress: false,\n            error: undefined,\n          }),\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            queryInProgress: false,\n          }),\n      })\n\n    return true\n  }\n\n  handleQueryChange(query: string) {\n    this.setState({query})\n  }\n\n  handleParamsChange({raw, parsed, valid, error}: ParamsEditorChangeEvent) {\n    this.setState(\n      {\n        rawParams: raw,\n        params: parsed,\n        hasValidParams: valid,\n        paramsError: error,\n      },\n      () => this._localStorage.set('params', raw),\n    )\n  }\n\n  handleCopyUrl() {\n    const el = this._operationUrlElement.current\n    if (!el) {\n      return\n    }\n\n    try {\n      el.select()\n      document.execCommand('copy')\n      this.props.toast.push({\n        closable: true,\n        title: 'Copied to clipboard',\n        status: 'info',\n        id: 'vision-copy',\n      })\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Unable to copy to clipboard :(')\n    }\n  }\n\n  render() {\n    const {datasets, t} = this.props\n    const {\n      apiVersion,\n      customApiVersion,\n      dataset,\n      e2eTime,\n      error,\n      hasValidParams,\n      isValidApiVersion,\n      listenInProgress,\n      listenMutations,\n      paneSizeOptions,\n      paramsError,\n      perspective,\n      query,\n      queryInProgress,\n      queryResult,\n      queryTime,\n      rawParams,\n      url,\n    } = this.state\n    const hasResult = !error && !queryInProgress && typeof queryResult !== 'undefined'\n    const jsonUrl = hasResult ? getJsonBlobUrl(queryResult) : ''\n    const csvUrl = hasResult ? getCsvBlobUrl(queryResult) : ''\n\n    return (\n      <Root\n        direction=\"column\"\n        height=\"fill\"\n        ref={this._visionRoot}\n        sizing=\"border\"\n        overflow=\"hidden\"\n      >\n        <Header paddingX={3} paddingY={2}>\n          <Grid columns={[1, 4, 8, 12]}>\n            {/* Dataset selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.dataset-label')}</StyledLabel>\n                </Card>\n                <Select value={dataset} onChange={this.handleChangeDataset}>\n                  {datasets.map((ds) => (\n                    <option key={ds}>{ds}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* API version selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.api-version-label')}</StyledLabel>\n                </Card>\n                <Select\n                  value={customApiVersion === false ? apiVersion : 'other'}\n                  onChange={this.handleChangeApiVersion}\n                >\n                  {API_VERSIONS.map((version) => (\n                    <option key={version}>{version}</option>\n                  ))}\n                  <option key=\"other\" value=\"other\">\n                    {t('settings.other-api-version-label')}\n                  </option>\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Custom API version input */}\n            {customApiVersion !== false && (\n              <Box padding={1} column={2}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel textOverflow=\"ellipsis\">\n                      {t('settings.custom-api-version-label')}\n                    </StyledLabel>\n                  </Card>\n\n                  <TextInput\n                    ref={this._customApiVersionElement}\n                    value={customApiVersion}\n                    onChange={this.handleCustomApiVersionChange}\n                    customValidity={\n                      isValidApiVersion ? undefined : t('settings.error.invalid-api-version')\n                    }\n                    maxLength={11}\n                  />\n                </Stack>\n              </Box>\n            )}\n\n            {/* Perspective selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingBottom={1}>\n                  <Inline space={1}>\n                    <Box>\n                      <StyledLabel>{t('settings.perspective-label')}</StyledLabel>\n                    </Box>\n\n                    <Box>\n                      <PerspectivePopover />\n                    </Box>\n                  </Inline>\n                </Card>\n\n                <Select value={perspective} onChange={this.handleChangePerspective}>\n                  {PERSPECTIVES.map((p) => (\n                    <option key={p}>{p}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Query URL (for copying) */}\n            {typeof url === 'string' ? (\n              <Box padding={1} flex={1} column={customApiVersion === false ? 6 : 4}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel>\n                      {t('query.url')}&nbsp;\n                      <QueryCopyLink onClick={this.handleCopyUrl}>\n                        [{t('action.copy-url-to-clipboard')}]\n                      </QueryCopyLink>\n                    </StyledLabel>\n                  </Card>\n                  <Flex flex={1} gap={1}>\n                    <Box flex={1}>\n                      <TextInput readOnly type=\"url\" ref={this._operationUrlElement} value={url} />\n                    </Box>\n                    <Tooltip content={t('action.copy-url-to-clipboard')}>\n                      <Button\n                        aria-label={t('action.copy-url-to-clipboard')}\n                        type=\"button\"\n                        mode=\"ghost\"\n                        icon={CopyIcon}\n                        onClick={this.handleCopyUrl}\n                      />\n                    </Tooltip>\n                  </Flex>\n                </Stack>\n              </Box>\n            ) : (\n              <Box flex={1} />\n            )}\n          </Grid>\n        </Header>\n        <SplitpaneContainer flex=\"auto\">\n          {/* @ts-expect-error: https://github.com/tomkp/react-split-pane/pull/819 */}\n          <SplitPane\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            split={narrowBreakpoint() ? 'vertical' : 'horizontal'}\n            minSize={280}\n            defaultSize={400}\n            maxSize={-400}\n          >\n            <Box height=\"stretch\" flex={1}>\n              {/*\n                  The way react-split-pane handles the sizes is kind of finicky and not clear. What the props above does is:\n                  - It sets the initial size of the panes to 1/2 of the total available height of the container\n                  - Sets the minimum size of a pane whatever is bigger of 1/2 of the total available height of the container, or 170px\n                  - The max size is set to either 60% or 70% of the available space, depending on if the container height is above 650px\n                  - Disables resizing when total height is below 500, since it becomes really cumbersome to work with the panes then\n                  - The \"primary\" prop (https://github.com/tomkp/react-split-pane#primary) tells the second pane to shrink or grow by the available space\n                  - Disables resize if the container height is less then 500px\n                  This should ensure that we mostly avoid a pane to take up all the room, and for the controls to not be eaten up by the pane\n                */}\n              {/* @ts-expect-error: https://github.com/tomkp/react-split-pane/pull/819 */}\n              <SplitPane\n                className=\"sidebarPanes\"\n                split={'horizontal'}\n                defaultSize={\n                  narrowBreakpoint() ? paneSizeOptions.defaultSize : paneSizeOptions.minSize\n                }\n                size={paneSizeOptions.size}\n                allowResize={paneSizeOptions.allowResize}\n                minSize={narrowBreakpoint() ? paneSizeOptions.minSize : 100}\n                maxSize={paneSizeOptions.maxSize}\n                primary=\"first\"\n              >\n                <InputContainer display=\"flex\" ref={this._queryEditorContainer}>\n                  <Box flex={1}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('query.label')}</StyledLabel>\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <VisionCodeMirror value={query} onChange={this.handleQueryChange} />\n                  </Box>\n                </InputContainer>\n                <InputContainer display=\"flex\" ref={this._paramsEditorContainer}>\n                  <Card flex={1} tone={hasValidParams ? 'default' : 'critical'}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('params.label')}</StyledLabel>\n                        {paramsError && (\n                          <Tooltip placement=\"top-end\" portal content={paramsError}>\n                            <Box padding={1} marginX={2}>\n                              <Text>\n                                <ErrorOutlineIcon />\n                              </Text>\n                            </Box>\n                          </Tooltip>\n                        )}\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <ParamsEditor value={rawParams} onChange={this.handleParamsChange} />\n                  </Card>\n                  {/* Controls (listen/run) */}\n                  <ControlsContainer>\n                    <Card padding={3} paddingX={3}>\n                      <Tooltip\n                        content={\n                          <Card radius={4}>\n                            <Text size={1} muted>\n                              {t('params.error.params-invalid-json')}\n                            </Text>\n                          </Card>\n                        }\n                        placement=\"top\"\n                        disabled={hasValidParams}\n                        portal\n                      >\n                        <Flex justify=\"space-evenly\">\n                          <Box flex={1}>\n                            <Tooltip\n                              content={\n                                <Card radius={4}>\n                                  <Hotkeys keys={['Ctrl', 'Enter']} />\n                                </Card>\n                              }\n                              placement=\"top\"\n                              portal\n                            >\n                              <Button\n                                width=\"fill\"\n                                onClick={this.handleQueryExecution}\n                                type=\"button\"\n                                icon={queryInProgress ? StopIcon : PlayIcon}\n                                disabled={listenInProgress || !hasValidParams}\n                                tone={queryInProgress ? 'positive' : 'primary'}\n                                text={\n                                  queryInProgress\n                                    ? t('action.query-cancel')\n                                    : t('action.query-execute')\n                                }\n                              />\n                            </Tooltip>\n                          </Box>\n                          <Box flex={1} marginLeft={3}>\n                            <Button\n                              width=\"fill\"\n                              onClick={this.handleListenExecution}\n                              type=\"button\"\n                              icon={listenInProgress ? StopIcon : PlayIcon}\n                              text={\n                                listenInProgress\n                                  ? t('action.listen-cancel')\n                                  : t('action.listen-execute')\n                              }\n                              mode=\"ghost\"\n                              disabled={!hasValidParams}\n                              tone={listenInProgress ? 'positive' : 'default'}\n                            />\n                          </Box>\n                        </Flex>\n                      </Tooltip>\n                    </Card>\n                  </ControlsContainer>\n                </InputContainer>\n              </SplitPane>\n            </Box>\n            <ResultOuterContainer direction=\"column\">\n              <ResultInnerContainer flex={1}>\n                <ResultContainer\n                  flex={1}\n                  overflow=\"hidden\"\n                  tone={error ? 'critical' : 'default'}\n                  $isInvalid={Boolean(error)}\n                >\n                  <Result overflow=\"auto\">\n                    <InputBackgroundContainer>\n                      <Box marginLeft={3}>\n                        <StyledLabel muted>{t('result.label')}</StyledLabel>\n                      </Box>\n                    </InputBackgroundContainer>\n                    <Box padding={3} paddingTop={5}>\n                      {(queryInProgress || (listenInProgress && listenMutations.length === 0)) && (\n                        <Box marginTop={3}>\n                          <DelayedSpinner />\n                        </Box>\n                      )}\n                      {error && <QueryErrorDialog error={error} />}\n                      {hasResult && <ResultView data={queryResult} />}\n                      {listenInProgress && listenMutations.length > 0 && (\n                        <ResultView data={listenMutations} />\n                      )}\n                    </Box>\n                  </Result>\n                </ResultContainer>\n              </ResultInnerContainer>\n              {/* Execution time */}\n              <ResultFooter justify=\"space-between\" direction={['column', 'column', 'row']}>\n                <TimingsCard paddingX={4} paddingY={3} sizing=\"border\">\n                  <TimingsTextContainer align=\"center\">\n                    <Box>\n                      <Text muted>\n                        {t('result.execution-time-label')}:{' '}\n                        {typeof queryTime === 'number'\n                          ? `${queryTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                    <Box marginLeft={4}>\n                      <Text muted>\n                        {t('result.end-to-end-time-label')}:{' '}\n                        {typeof e2eTime === 'number'\n                          ? `${e2eTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                  </TimingsTextContainer>\n                </TimingsCard>\n\n                {hasResult && (\n                  <DownloadsCard paddingX={4} paddingY={3} sizing=\"border\">\n                    <SaveResultLabel muted>\n                      <Translate\n                        components={{\n                          SaveResultButtons: () => (\n                            <>\n                              <SaveJsonButton blobUrl={jsonUrl} />\n                              <SaveCsvButton blobUrl={csvUrl} />\n                            </>\n                          ),\n                        }}\n                        i18nKey=\"result.save-result-as-format\"\n                        t={t}\n                      />\n                    </SaveResultLabel>\n                  </DownloadsCard>\n                )}\n              </ResultFooter>\n            </ResultOuterContainer>\n          </SplitPane>\n        </SplitpaneContainer>\n      </Root>\n    )\n  }\n}\n","import {type SanityClient} from '@sanity/client'\nimport {useEffect, useState} from 'react'\n\nexport function useDatasets(client: SanityClient): string[] | Error | undefined {\n  const projectId = client.config().projectId\n  const [datasets, setDatasets] = useState<string[] | Error | undefined>()\n\n  useEffect(() => {\n    const datasets$ = client.observable.datasets.list().subscribe({\n      next: (result) => setDatasets(result.map((ds) => ds.name)),\n      error: (err) => setDatasets(err),\n    })\n\n    return () => datasets$.unsubscribe()\n  }, [client, projectId])\n\n  return datasets || undefined\n}\n","import {useToast} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {DelayedSpinner} from '../components/DelayedSpinner'\nimport {VisionGui} from '../components/VisionGui'\nimport {useDatasets} from '../hooks/useDatasets'\nimport {visionLocaleNamespace} from '../i18n'\nimport {type VisionProps} from '../types'\n\nexport function VisionContainer(props: VisionProps) {\n  const toast = useToast()\n  const loadedDatasets = useDatasets(props.client)\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!loadedDatasets) {\n    return <DelayedSpinner />\n  }\n\n  const datasets =\n    loadedDatasets instanceof Error\n      ? // On error, use the clients configured dataset\n        [props.client.config().dataset || 'production']\n      : // Otherwise use the loaded list, obviously\n        loadedDatasets\n\n  return <VisionGui {...props} datasets={datasets} toast={toast} t={t} />\n}\n","/* eslint-disable @sanity/i18n/no-attribute-string-literals */\n/* eslint-disable i18next/no-literal-string */\nimport {Button, Card, Code, Container, Heading, Stack} from '@sanity/ui'\nimport {Component, type PropsWithChildren} from 'react'\n\nimport {clearLocalStorage} from '../util/localStorage'\n\n/**\n * @internal\n */\nexport type VisionErrorBoundaryProps = PropsWithChildren\n\n/**\n * @internal\n */\ninterface VisionErrorBoundaryState {\n  error: string | null\n  numRetries: number\n}\n\n/**\n * @internal\n */\nexport class VisionErrorBoundary extends Component<\n  VisionErrorBoundaryProps,\n  VisionErrorBoundaryState\n> {\n  constructor(props: VisionErrorBoundaryProps) {\n    super(props)\n    this.state = {error: null, numRetries: 0}\n  }\n\n  static getDerivedStateFromError(error: unknown) {\n    return {error: error instanceof Error ? error.message : `${error}`}\n  }\n\n  handleRetryRender = () =>\n    this.setState((prev) => ({error: null, numRetries: prev.numRetries + 1}))\n\n  handleRetryWithCacheClear = () => {\n    clearLocalStorage()\n    this.handleRetryRender()\n  }\n\n  render() {\n    if (!this.state.error) {\n      return this.props.children\n    }\n\n    const message = this.state.error\n    const withCacheClear = this.state.numRetries > 0\n\n    return (\n      <Card\n        height=\"fill\"\n        overflow=\"auto\"\n        paddingY={[4, 5, 6, 7]}\n        paddingX={4}\n        sizing=\"border\"\n        tone=\"critical\"\n      >\n        <Container width={3}>\n          <Stack space={4}>\n            <div>\n              <Button\n                onClick={withCacheClear ? this.handleRetryWithCacheClear : this.handleRetryRender}\n                text={withCacheClear ? 'Clear cache and retry' : 'Retry'}\n                tone=\"default\"\n              />\n            </div>\n\n            <Heading>An error occured</Heading>\n\n            <Card border radius={2} overflow=\"auto\" padding={4} tone=\"inherit\">\n              <Stack space={4}>\n                {message && (\n                  <Code size={1}>\n                    <strong>Error: {message}</strong>\n                  </Code>\n                )}\n              </Stack>\n            </Card>\n          </Stack>\n        </Container>\n      </Card>\n    )\n  }\n}\n","import {type Tool, useClient} from 'sanity'\n\nimport {DEFAULT_API_VERSION} from './apiVersions'\nimport {VisionContainer} from './containers/VisionContainer'\nimport {VisionErrorBoundary} from './containers/VisionErrorBoundary'\nimport {type VisionConfig} from './types'\n\ninterface SanityVisionProps {\n  tool: Tool<VisionConfig>\n}\n\nfunction SanityVision(props: SanityVisionProps) {\n  const client = useClient({apiVersion: '1'})\n  const config: VisionConfig = {\n    defaultApiVersion: DEFAULT_API_VERSION,\n    ...props.tool.options,\n  }\n\n  return (\n    <VisionErrorBoundary>\n      <VisionContainer client={client} config={config} />\n    </VisionErrorBoundary>\n  )\n}\n\nexport default SanityVision\n"],"names":["t","ResizeObserverPolyfill","__publicField","ResizeObserver"],"mappings":"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"}