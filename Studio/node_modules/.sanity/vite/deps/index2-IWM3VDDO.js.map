{
  "version": 3,
  "sources": ["../../../sanity/src/structure/panes/list/ListPaneContent.tsx", "../../../sanity/src/structure/panes/list/ListPaneHeader.tsx", "../../../sanity/src/structure/panes/list/ListPane.tsx"],
  "sourcesContent": ["import {Box} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  CommandList,\n  type CommandListItemContext,\n  type GeneralPreviewLayoutKey,\n  useGetI18nText,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {PaneContent, PaneItem, usePaneLayout} from '../../components'\nimport {type PaneListItem, type PaneListItemDivider} from '../../types'\n\ninterface ListPaneContentProps {\n  childItemId?: string\n  isActive?: boolean\n  items: (PaneListItem<unknown> | PaneListItemDivider)[] | undefined\n  layout?: GeneralPreviewLayoutKey\n  showIcons: boolean\n  title: string\n}\n\nconst Divider = styled.hr`\n  background-color: var(--card-border-color);\n  height: 1px;\n  margin: 0;\n  border: none;\n`\n\n/**\n * @internal\n */\nexport function ListPaneContent(props: ListPaneContentProps) {\n  const {childItemId, items, isActive, layout, showIcons, title} = props\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const getI18nText = useGetI18nText(\n    items?.filter(\n      (item): item is Exclude<typeof item, {type: 'divider'}> => item.type !== 'divider',\n    ),\n  )\n\n  const getItemDisabled = useCallback(\n    (itemIndex: number) => {\n      return items?.find((_, i) => i === itemIndex)?.type === 'divider'\n    },\n    [items],\n  )\n\n  const shouldShowIconForItem = useCallback(\n    (item: PaneListItem): boolean => {\n      const itemShowIcon = item.displayOptions?.showIcon\n\n      // Specific true/false on item should have precedence over list setting\n      if (typeof itemShowIcon !== 'undefined') {\n        return itemShowIcon !== false // Boolean(item.icon)\n      }\n\n      // If no item setting is defined, defer to the pane settings\n      return showIcons !== false // Boolean(item.icon)\n    },\n    [showIcons],\n  )\n\n  const renderItem = useCallback(\n    (item: PaneListItem<unknown> | PaneListItemDivider, ctx: CommandListItemContext) => {\n      const {virtualIndex: itemIndex} = ctx\n\n      if (item.type === 'divider') {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Box key={`divider-${itemIndex}`} marginBottom={1}>\n            <Divider />\n          </Box>\n        )\n      }\n\n      const pressed = !isActive && childItemId === item.id\n      const selected = isActive && childItemId === item.id\n      // If this is a document list item, pass on the ID and type,\n      // otherwise leave it undefined to use the passed title and gang\n      const value =\n        item._id && item.schemaType\n          ? {_id: item._id, _type: item.schemaType.name, title: item.title}\n          : undefined\n\n      return (\n        <PaneItem\n          icon={shouldShowIconForItem(item) ? item.icon : false}\n          id={item.id}\n          key={item.id}\n          layout={layout}\n          marginBottom={1}\n          pressed={pressed}\n          schemaType={item.schemaType}\n          selected={selected}\n          title={getI18nText(item).title}\n          value={value}\n        />\n      )\n    },\n    [childItemId, getI18nText, isActive, layout, shouldShowIconForItem],\n  )\n\n  return (\n    <PaneContent overflow={layoutCollapsed ? 'hidden' : 'auto'}>\n      {items && items.length > 0 && (\n        <CommandList\n          activeItemDataAttr=\"data-hovered\"\n          ariaLabel={title}\n          canReceiveFocus\n          getItemDisabled={getItemDisabled}\n          itemHeight={51}\n          items={items}\n          onlyShowSelectionWhenActive\n          paddingBottom={1}\n          paddingX={3}\n          renderItem={renderItem}\n          wrapAround={false}\n        />\n      )}\n    </PaneContent>\n  )\n}\n", "import {ArrowLeftIcon} from '@sanity/icons'\n\nimport {Button} from '../../../ui-components'\nimport {BackLink, PaneHeader, PaneHeaderActions, usePane} from '../../components'\nimport {type PaneMenuItem, type PaneMenuItemGroup} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\n\ninterface ListPaneHeaderProps {\n  index: number\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  title: string\n}\n\nexport const ListPaneHeader = ({index, menuItems, menuItemGroups, title}: ListPaneHeaderProps) => {\n  const {features} = useStructureTool()\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  return (\n    <PaneHeader\n      actions={<PaneHeaderActions menuItems={menuItems} menuItemGroups={menuItemGroups} />}\n      backButton={\n        features.backButton &&\n        index > 0 && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: 'Back'}}\n          />\n        )\n      }\n      tabIndex={tabIndex}\n      title={title}\n    />\n  )\n}\n", "import {Card, Code} from '@sanity/ui'\nimport {useI18nText} from 'sanity'\n\nimport {Pane} from '../../components'\nimport {_DEBUG} from '../../constants'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {ListPaneContent} from './ListPaneContent'\nimport {ListPaneHeader} from './ListPaneHeader'\n\ntype ListPaneProps = BaseStructureToolPaneProps<'list'>\n\n/**\n * @internal\n */\nexport function ListPane(props: ListPaneProps) {\n  const {childItemId, index, isActive, isSelected, pane, paneKey} = props\n\n  const {defaultLayout, displayOptions, items, menuItems, menuItemGroups} = pane\n  const showIcons = displayOptions?.showIcons !== false\n  const {title} = useI18nText(pane)\n\n  return (\n    <Pane\n      currentMaxWidth={350}\n      data-testid=\"structure-tool-list-pane\"\n      data-ui=\"ListPane\"\n      id={paneKey}\n      maxWidth={640}\n      minWidth={320}\n      selected={isSelected}\n    >\n      {_DEBUG && (\n        <Card padding={4} tone=\"transparent\">\n          <Code>{pane.source || '(none)'}</Code>\n        </Card>\n      )}\n\n      <ListPaneHeader\n        index={index}\n        menuItems={menuItems}\n        menuItemGroups={menuItemGroups}\n        title={title}\n      />\n\n      <ListPaneContent\n        childItemId={childItemId}\n        isActive={isActive}\n        items={items}\n        layout={defaultLayout}\n        key={paneKey}\n        showIcons={showIcons}\n        title={title}\n      />\n    </Pane>\n  )\n}\n"],
  "mappings": "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",
  "names": []
}
